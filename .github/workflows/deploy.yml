name: Deploy

on:
  push:
    tags:
      - v**

jobs:
  deploy_staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.tf.albert.nz
    env:
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    defaults:
      run:
        working-directory: infra
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - run: terraform init -input=false -backend-config="key=staging/tfstate.json"
      - run: |
          terraform apply -auto-approve -input=false \
            -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -var="cloudflare_account_id=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" \
            -var="app_subdomain=staging.tf" \
            -var="domain=albert.nz" \
            -var="environment_name=staging"
  deploy_production:
    name: Deploy to production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://tf.albert.nz
    needs: [deploy_staging]
    env:
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    defaults:
      run:
        working-directory: infra
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - run: terraform init -input=false -backend-config="key=production/tfstate.json"
      - run: |
          terraform apply -auto-approve -input=false \
            -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -var="cloudflare_account_id=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" \
            -var="app_subdomain=tf" \
            -var="domain=albert.nz" \
            -var="environment_name=production"
